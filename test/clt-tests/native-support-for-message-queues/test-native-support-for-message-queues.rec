––– block: ../base/dind/init –––
––– input –––
docker network create app-network --driver bridge > /dev/null; echo $?
––– output –––
0
––– input –––
docker run -it -e EXTRA=1 --network=app-network --platform linux/amd64 --name manticore -d ghcr.io/manticoresoftware/manticoresearch:test-kit-latest bash
––– output –––
––– input –––
docker exec manticore searchd
––– output –––
––– input –––
docker run -it -e EXTRA=1 --network=app-network --name kafka -v ./test/clt-tests/kafka/import.sh:/import.sh -v ./test/clt-tests/kafka/dump.json:/tmp/dump.json -e KAFKA_CFG_NODE_ID=0 -e KAFKA_CFG_PROCESS_ROLES=controller,broker -e KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093 -e KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 -e KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092 -e KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT -e KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER -e KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT bitnami/kafka:3.7.0
––– output –––
––– input –––
docker exec kafka mysql -h0 -P9306 -e "CREATE SOURCE kafka (id bigint, term text, abbrev text, GlossDef json) type='kafka' broker_list='kafka:9092' topic_list='my-data' consumer_group='manticore' num_consumers='2' batch=50;CREATE TABLE destination_kafka (id bigint, name text, short_name text, received_at text, size multi);CREATE MATERIALIZED VIEW view_table TO destination_kafka AS SELECT id, term as name, abbrev as short_name, UTC_TIMESTAMP() as received_at, GlossDef.size as size FROM kafka"
––– output –––
––– input –––
docker exec kafka ./import.sh
––– output –––
––– input –––
docker exec -it kafka kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic my-data --from-beginning --max-messages 10
––– output –––
––– input –––
docker exec manticore mysql -h0 -P9306 -e "SELECT * FROM destination_kafka LIMIT 10;"
––– output –––
