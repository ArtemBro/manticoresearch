name: ðŸ“¦ Pack and publish

on:
  workflow_run:
    workflows: [ ðŸ”¬ Test ]
    types: [ completed ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened, labeled, unlabeled]

# cancels the previous workflow run when a new one appears in the same branch (e.g. master or a PR's branch)
concurrency:
  group: pack_${{ github.ref }}
  cancel-in-progress: true

jobs:

  # pack:
  #   name: OK to pack?
  #   runs-on: ubuntu-22.04
  #   if: |
  #     (github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'pack') || contains(github.event.pull_request.labels.*.name, 'publish')))
  #     || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/master')
  #   steps:
  #     - run: echo "All set to build packages"
  #
  # pack_debian_ubuntu:
  #   name: Debian/Ubuntu packages
  #   uses: ./.github/workflows/build_template.yml
  #   needs: pack
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # DISTR: [bionic, focal, jammy, buster, bullseye, bookworm]
  #       # arch: [x86_64, aarch64]
  #       DISTR: [bionic]
  #       arch: [x86_64]
  #   with:
  #     DISTR: ${{ matrix.DISTR }}
  #     arch: ${{ matrix.arch }}
  #     cmake_command: |
  #       mkdir build
  #       cd build
  #       cmake -DPACK=1 ..
  #       cmake --build . --target package
  #     cache_key: pack_${{ matrix.DISTR }}_${{ matrix.arch }}
  #     artifact_list: "build/manticore*deb"

  # pack_rhel:
  #   name: RHEL packages
  #   uses: ./.github/workflows/build_template.yml
  #   needs: pack
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       DISTR: [rhel7, rhel8, rhel9]
  #       arch: [x86_64, aarch64]
  #   with:
  #     DISTR: ${{ matrix.DISTR }}
  #     arch: ${{ matrix.arch }}
  #     boost: boost_rhel_feb17
  #     cmake_command: |
  #       ln -s $(pwd) /builds_manticoresearch_dev_usr_src_debug_manticore_component_src_0
  #       cd /builds_manticoresearch_dev_usr_src_debug_manticore_component_src_0
  #       mkdir build
  #       cd build
  #       cmake -DPACK=1 ..
  #       cmake --build . --target package
  #     cache_key: pack_${{ matrix.DISTR }}_${{ matrix.arch }}
  #     artifact_list: "build/manticore*rpm"
  #
  # pack_macos:
  #   name: MacOS packages
  #   uses: ./.github/workflows/build_template.yml
  #   needs: pack
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       DISTR: [macos]
  #       arch: [x86_64, arm64]
  #   with:
  #     DISTR: ${{ matrix.DISTR }}
  #     arch: ${{ matrix.arch }}
  #     HOMEBREW_PREFIX: /opt/homebrew
  #     cmake_command: |
  #       mkdir build
  #       cd build
  #       cmake -DPACK=1 ..
  #       cmake --build . --target package
  #     cache_key: pack_${{ matrix.DISTR }}_${{ matrix.arch }}
  #     artifact_list: "build/manticore*tar.gz"
  #
  # pack_windows:
  #   name: Windows x64 package
  #   uses: ./.github/workflows/build_template.yml
  #   needs: pack
  #   with:
  #     DISTR: windows
  #     arch: x64
  #     sysroot: roots_apr12
  #     cmake_command: |
  #       mkdir build
  #       cd build
  #       cmake -DPACK=1 ..
  #       cmake --build . --target package
  #     cache_key: pack_${{ matrix.DISTR }}_${{ matrix.arch }}
  #     artifact_list: "build/manticore*exe build/manticore*zip"

  # virtual job to simplify the CI
  # This job depends on all the package preparation jobs that have to pass before we can start publishing packages
  # publish:
  #   name: OK to publish?
  #   runs-on: ubuntu-22.04
  #   needs: [pack_debian_ubuntu, pack_rhel, pack_macos, pack_windows]
  #   if: |
  #     (github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'publish')))
  #     || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/master')
  #   steps:
  #     - run: echo "Ready to publish"

  publish_debian_ubuntu:
#    needs: publish
    name: Publishing Debian/Ubuntu
    uses: ./.github/workflows/publish_template.yml
    strategy:
      fail-fast: true
      matrix:
        # DISTR: [bionic, focal, jammy, buster, bullseye, bookworm]
        # arch: [x86_64, aarch64]
        DISTR: [focal]
        arch: [x86_64]
    with:
      distr: ${{ matrix.DISTR }}
      arch: ${{ matrix.arch }}
      type: deb
      delimiter: "-"

  # publish_rhel:
  #   needs: publish
  #   runs-on: [self-hosted, Linux, X64]
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       DISTR: [7, 8, 9]
  #       arch: [x86_64, aarch64]
  #   name: RHEL ${{ matrix.DISTR }} ${{ matrix.arch }} publishing
  #   steps:
  #     - uses: manticoresoftware/download_artifact_with_retries@main
  #       with:
  #         name: build_rhel${{ matrix.DISTR }}_RelWithDebInfo_${{ matrix.arch }}
  #         path: .
  #     - name: Deploy package
  #       run: |
  #         curl -sSL https://raw.githubusercontent.com/manticoresoftware/repo_scripts/main/upload_repo_rpm > script
  #         chmod +x script
  #         DISTRO=${{ matrix.DISTR }} DIGIT_DELIMITER2="_" ./script
  #       shell: bash
  #
  # publish_macos:
  #   needs: publish
  #   runs-on: [self-hosted, Linux, X64]
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       arch: [x86_64, arm64]
  #   name: macos ${{ matrix.arch }} publishing
  #   steps:
  #     - uses: manticoresoftware/download_artifact_with_retries@main
  #       with:
  #         name: build_macos_RelWithDebInfo_${{ matrix.arch }}
  #         path: .
  #     - name: Deploy package
  #       run: |
  #         curl -sSL https://raw.githubusercontent.com/manticoresoftware/repo_scripts/main/upload_repo_arc > script
  #         chmod +x script
  #         DIGIT_DELIMITER2="-" ./script
  #       shell: bash
  #
  # publish_windows:
  #   name: Publishing Windows packages to repo.manticoresearch.com
  #   needs: publish
  #   runs-on: [self-hosted, Linux, X64]
  #   steps:
  #     - uses: manticoresoftware/download_artifact_with_retries@main
  #       with:
  #         name: build_windows_RelWithDebInfo_x64
  #         path: .
  #     - name: Deploy package
  #       run: |
  #         curl -sSL https://raw.githubusercontent.com/manticoresoftware/repo_scripts/main/upload_repo_arc > script
  #         chmod +x script
  #         DIGIT_DELIMITER2="-" ./script
  #       shell: bash
  #
  # build_nsis:
  #   name: Making and publishing Windows NSIS installer
  #   needs: publish_windows
  #   runs-on: ubuntu-22.04
  #   container:
  #     image: manticoresearch/build_nsis:1.0.0
  #   env:
  #     CI_COMMIT_SHA: ${{ github.sha }}
  #   steps:
  #     - name: Checkout repository # We have to checkout to access .github/workflows/ in further steps
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Initialization
  #       # without adding the safe.directory the script fails to do git show ...
  #       run: git config --global --add safe.directory /__w/manticoresearch/manticoresearch
  #     - name: Make installer
  #       # TODO: remove the hardcoded paths /builds/ below
  #       run: |
  #         mkdir -p /builds/manticoresearch/dev/build/
  #         /bin/bash dist/build_dockers/nsis/nsis_src_parser.sh
  #       shell: bash
  #     - run: mv /builds/manticoresearch/dev/build build
  #     - name: Upload artifact
  #       uses: manticoresoftware/upload_artifact_with_retries@main
  #       with:
  #         name: win_installer
  #         path: build/manticore-*.exe
  #
  # publish_nsis:
  #   name: Publishing Windows NSIS installer to repo.manticoresearch.com
  #   runs-on: [self-hosted, Linux, X64]
  #   needs: build_nsis
  #   steps:
  #     - uses: manticoresoftware/download_artifact_with_retries@main
  #       with:
  #         name: win_installer
  #         path: .
  #     - name: Deploy package
  #       run: |
  #         wget https://raw.githubusercontent.com/manticoresoftware/repo_scripts/main/upload_repo_arc
  #         chmod +x upload_repo_arc
  #         /bin/bash ./upload_repo_arc
  #       shell: bash
  #
  # build_docker:
  #   name: Building and pushing docker
  #   needs: publish_debian_ubuntu
  #   runs-on: ubuntu-22.04
  #   env:
  #     DOCKER_USER: ${{ secrets.DOCKER_USER }}
  #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #     GHCR_USER: ${{ secrets.GHCR_USER }}
  #     GHCR_PASSWORD: ${{ secrets.GHCR_PASSWORD }}
  #   steps:
  #     - name: Checkout repository # We have to checkout to access .github/workflows/ in further steps
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Calculate short commit hash
  #       id: sha
  #       run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
  #     # TODO: remove tmp from dockerhub_deploy.sh
  #     - name: Building docker
  #       run: CI_COMMIT_SHORT_SHA=${{ steps.sha.outputs.sha_short }} /bin/bash dist/dockerhub_deploy.sh
