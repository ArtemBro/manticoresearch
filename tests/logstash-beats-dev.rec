â€“â€“â€“ input â€“â€“â€“
export PATH=/usr/bin:/usr/local/bin:/usr/sbin:/sbin:/bin
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
apt-get update > /dev/null; echo $?
â€“â€“â€“ output â€“â€“â€“
0
â€“â€“â€“ input â€“â€“â€“
apt-get -y install gnupg2 openjdk-8-jre-headless curl jq > /dev/null; echo $?
â€“â€“â€“ output â€“â€“â€“
debconf: delaying package configuration, since apt-utils is not installed
0
â€“â€“â€“ input â€“â€“â€“
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elastic-keyring.gpg
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
echo "deb [signed-by=/usr/share/keyrings/elastic-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | tee -a /etc/apt/sources.list.d/elastic-8.x.list
â€“â€“â€“ output â€“â€“â€“
deb [signed-by=/usr/share/keyrings/elastic-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main
â€“â€“â€“ input â€“â€“â€“
mkdir /usr/share/logstash && cd /usr/share/logstash
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
wget -q https://artifacts.elastic.co/downloads/logstash/logstash-7.10.0-linux-x86_64.tar.gz
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
tar -xvzf logstash-7.10.0-linux-x86_64.tar.gz > /dev/null; echo $?
â€“â€“â€“ output â€“â€“â€“
0
â€“â€“â€“ input â€“â€“â€“
mkdir /usr/share/filebeat && cd /usr/share/filebeat
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
wget -q https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.10.0-linux-x86_64.tar.gz
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
tar -xvzf filebeat-7.10.0-linux-x86_64.tar.gz > /dev/null; echo $?
â€“â€“â€“ output â€“â€“â€“
0
â€“â€“â€“ input â€“â€“â€“
cd /usr/local/src
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
ln -s /usr/share/logstash/logstash-7.10.0/bin/logstash /usr/bin/logstash
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
ln -s /usr/share/filebeat/filebeat-7.10.0-linux-x86_64/filebeat /usr/bin/filebeat
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
rm -rf /usr/bin/manticore-executor
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
wget -q https://api.github.com/repos/manticoresoftware/executor/releases/latest
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
wget -q -P packages $(cat latest | grep -oP ': "\K.*amd64.deb' | tail -1)
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
apt-get -y install ./packages/* > /dev/null; echo $?
â€“â€“â€“ output â€“â€“â€“
debconf: delaying package configuration, since apt-utils is not installed
0
â€“â€“â€“ input â€“â€“â€“
searchd -v
â€“â€“â€“ output â€“â€“â€“
Manticore #!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{9}@[0-9]{6}/!# dev (columnar #!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{7}@[0-9]{6}/!#) (secondary #!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{7}@[0-9]{6}/!#)
Copyright (c) 2001-2016, Andrew Aksyonoff
Copyright (c) 2008-2016, Sphinx Technologies Inc (http://sphinxsearch.com)
Copyright (c) 2017-#!/[0-9]{4}/!#, Manticore Software LTD (https://manticoresearch.com)
â€“â€“â€“ input â€“â€“â€“
manticore-executor -v
â€“â€“â€“ output â€“â€“â€“
PHP #!/[0-9]+\.[0-9]+\.[0-9]+/!# (cli) (built: #!/[a-zA-Z]{3}/!# #!/[0-9]+/!# #!/[0-9]{4}/!# #!/[0-9]{2}:[0-9]{2}:[0-9]{2}/!#) (ZTS)
Copyright (c) The PHP Group
Zend Engine #!/v[0-9]+\.[0-9]+\.[0-9]+/!#, Copyright (c) Zend Technologies
â€“â€“â€“ input â€“â€“â€“
searchd
â€“â€“â€“ output â€“â€“â€“
Manticore #!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{9}@[0-9]{6}/!# dev (columnar #!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{7}@[0-9]{6}/!#) (secondary #!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{7}@[0-9]{6}/!#)
Copyright (c) 2001-2016, Andrew Aksyonoff
Copyright (c) 2008-2016, Sphinx Technologies Inc (http://sphinxsearch.com)
Copyright (c) 2017-#!/[0-9]{4}/!#, Manticore Software LTD (https://manticoresearch.com)
[#!/[0-9]{2}:[0-9]{2}\.[0-9]{3}/!#] [#!/[0-9]+/!#] using config file '/etc/manticoresearch/manticore.conf' (#!/[0-9]+/!# chars)...
starting daemon version '#!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{9}@[0-9]{6}/!# dev (columnar #!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{7}@[0-9]{6}/!#) (secondary #!/[0-9]+\.[0-9]+\.[0-9]+ [a-f0-9]{7}@[0-9]{6}/!#)' ...
listening on all interfaces for mysql, port=9306
listening on UNIX socket /var/run/mysqld/mysqld.sock
listening on all interfaces for sphinx and http(s), port=9312
listening on all interfaces for sphinx and http(s), port=9308
â€“â€“â€“ input â€“â€“â€“
printf 'input {\n    file {\n        path => ["/var/log/dpkg.log"]\n        start_position => "beginning"\n        sincedb_path => "/dev/null"\n        mode => "read"\n        exit_after_read => "true"\n        file_completed_action => "log"\n        file_completed_log_path => "/dev/null"\n    }\n}\n\noutput {\n    elasticsearch {\n        index => "testlog_1"\n        hosts => ["http://localhost:9308"]\n        ilm_enabled => false\n        manage_template => false\n    }\n}\n' > logstash.conf
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
nohup logstash -f logstash.conf 2>/dev/null &
â€“â€“â€“ output â€“â€“â€“
[1] #!/[0-9]+/!#
â€“â€“â€“ input â€“â€“â€“
sleep 30
â€“â€“â€“ output â€“â€“â€“
[1]+  Done                    nohup logstash -f logstash.conf 2> /dev/null
â€“â€“â€“ input â€“â€“â€“
curl -s localhost:9308/cli_json -d 'describe testlog_1' | jq -cM '.[].data | sort_by(.Field)'
â€“â€“â€“ output â€“â€“â€“
[{"Field":"@timestamp","Type":"text","Properties":"indexed stored"},{"Field":"@version","Type":"text","Properties":"indexed stored"},{"Field":"host","Type":"text","Properties":"indexed stored"},{"Field":"id","Type":"bigint","Properties":""},{"Field":"message","Type":"text","Properties":"indexed stored"},{"Field":"path","Type":"text","Properties":"indexed stored"}]
â€“â€“â€“ input â€“â€“â€“
printf 'filebeat.inputs:\n- type: filestream\n  id: testlog\n  paths:\n    - /var/log/dpkg.log\n\noutput.elasticsearch:\n  hosts: ["http://localhost:9308"]\n  index:  "testlog_2"\n  allow_older_versions: true\n\nsetup.ilm:\n  enabled: false\n\nsetup.template:\n  name: "testlog_2"\n  pattern: "testlog_2"\n' > filebeat.yml
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
nohup filebeat -c filebeat.yml -e -strict.perms=false 2>/dev/null &
â€“â€“â€“ output â€“â€“â€“
[1] #!/[0-9]+/!#
â€“â€“â€“ input â€“â€“â€“
sleep 30
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
curl -s localhost:9308/cli_json -d 'describe testlog_2' | jq -cM '.[].data | sort_by(.Field)'
â€“â€“â€“ output â€“â€“â€“
[{"Field":"@timestamp","Type":"text","Properties":"indexed stored"},{"Field":"agent","Type":"json","Properties":""},{"Field":"ecs","Type":"json","Properties":""},{"Field":"host","Type":"json","Properties":""},{"Field":"id","Type":"bigint","Properties":""},{"Field":"input","Type":"json","Properties":""},{"Field":"log","Type":"json","Properties":""},{"Field":"message","Type":"text","Properties":"indexed stored"}]
â€“â€“â€“ input â€“â€“â€“
wget -q -P vector https://packages.timber.io/vector/0.30.0/vector_0.30.0-1_amd64.deb
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
dpkg -i vector/vector_0.30.0-1_amd64.deb > /dev/null; echo $?
â€“â€“â€“ output â€“â€“â€“
0
â€“â€“â€“ input â€“â€“â€“
vector --version
â€“â€“â€“ output â€“â€“â€“
vector 0.30.0 (x86_64-unknown-linux-gnu #!/[a-f0-9]+ v[0-9]+\-[0-9]+\-[0-9]+ v[0-9]+:[0-9]+:[0-9]+\.[0-9]+/!#)
â€“â€“â€“ input â€“â€“â€“
printf '[sources.test_file]\ntype = "file"\ninclude = [ "/var/log/dpkg.log" ]\n\n[transforms.modify_test_file]\ntype = "remap"\ninputs = [ "test_file" ]\nsource = """\n.vec_timestamp = del(.timestamp)"""\n\n[sinks.manticore]\ntype = "elasticsearch"\ninputs = [ "modify_test_file" ]\nendpoints = ["http://127.0.0.1:9308"]\nbulk.index = "testlog_3"\n' > vector.toml
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
nohup vector -c vector.toml 2>/dev/null &
â€“â€“â€“ output â€“â€“â€“
[1] #!/[0-9]+/!#
â€“â€“â€“ input â€“â€“â€“
sleep 30
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
curl -s localhost:9308/cli_json -d 'describe testlog_3' | jq -cM '.[].data | sort_by(.Field)'
â€“â€“â€“ output â€“â€“â€“
[{"Field":"file","Type":"text","Properties":"indexed stored"},{"Field":"host","Type":"text","Properties":"indexed stored"},{"Field":"id","Type":"bigint","Properties":""},{"Field":"message","Type":"text","Properties":"indexed stored"},{"Field":"source_type","Type":"text","Properties":"indexed stored"},{"Field":"vec_timestamp","Type":"text","Properties":"indexed stored"}]
â€“â€“â€“ input â€“â€“â€“
wget -q -P fluentbit http://mirrors.kernel.org/ubuntu/pool/main/liby/libyaml/libyaml-0-2_0.2.2-1_amd64.deb
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
dpkg -i fluentbit/libyaml-0-2_0.2.2-1_amd64.deb > /dev/null; echo $?
â€“â€“â€“ output â€“â€“â€“
0
â€“â€“â€“ input â€“â€“â€“
curl -s https://packages.fluentbit.io/fluentbit.key | gpg --dearmor > /usr/share/keyrings/fluentbit-keyring.gpg
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
OS_CODENAME=$(cat /etc/lsb-release | grep 'CODENAME' | cut -d= -f2)
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
echo "deb [signed-by=/usr/share/keyrings/fluentbit-keyring.gpg] https://packages.fluentbit.io/ubuntu/$OS_CODENAME $OS_CODENAME main" | tee /etc/apt/sources.list
â€“â€“â€“ output â€“â€“â€“
deb [signed-by=/usr/share/keyrings/fluentbit-keyring.gpg] https://packages.fluentbit.io/ubuntu/focal focal main
â€“â€“â€“ input â€“â€“â€“
apt-get update  > /dev/null && apt-get -y install fluent-bit > /dev/null; echo $?
â€“â€“â€“ output â€“â€“â€“
debconf: delaying package configuration, since apt-utils is not installed
0
â€“â€“â€“ input â€“â€“â€“
printf '[SERVICE]\n    flush        1\n    daemon       On\n    log_level    info\n\n[INPUT]\n    name tail\n    path /var/log/dpkg.log\n    inotify_watcher false\n    read_from_head true\n\n[OUTPUT]\n    name es\n    match *\n    host 127.0.0.1\n    port 9308\n    index testlog_4\n' > fluentbit.conf
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
/opt/fluent-bit/bin/fluent-bit -c fluentbit.conf
â€“â€“â€“ output â€“â€“â€“
[1mFluent Bit v#!/v[0-9]+\.[0-9]+\.[0-9]+/!#[0m
* [1m[93mCopyright (C) #!/2015\-[0-9]+/!# The Fluent Bit Authors[0m
* Fluent Bit is a CNCF sub-project under the umbrella of Fluentd
* https://fluentbit.io
[1m[[0m#!/v[0-9]+\/[0-9]+\/[0-9]+/!# #!/v[0-9]+:[0-9]+:[0-9]+/!#[1m][0m [[92m info[0m] switching to background mode (PID=#!/[0-9]+/!#)
â€“â€“â€“ input â€“â€“â€“
sleep 30
â€“â€“â€“ output â€“â€“â€“
â€“â€“â€“ input â€“â€“â€“
curl -s localhost:9308/cli_json -d 'describe testlog_4' | jq -cM '.[].data | sort_by(.Field)'
â€“â€“â€“ output â€“â€“â€“
[{"Field":"@timestamp","Type":"text","Properties":"indexed stored"},{"Field":"id","Type":"bigint","Properties":""},{"Field":"log","Type":"text","Properties":"indexed stored"}]
